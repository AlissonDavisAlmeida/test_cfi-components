[{"C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\index.tsx":"1","C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\App.tsx":"2","C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\hooks\\useLocalStorage.ts":"3","C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\context\\resourceLabels\\ResourceLabelsContext.tsx":"4","C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\context\\resourceMessages\\ResourceMessagesContext.tsx":"5"},{"size":567,"mtime":1660759847030,"results":"6","hashOfConfig":"7"},{"size":1194,"mtime":1660838763447,"results":"8","hashOfConfig":"7"},{"size":809,"mtime":1660679397057,"results":"9","hashOfConfig":"7"},{"size":1110,"mtime":1660677701758,"results":"10","hashOfConfig":"7"},{"size":1144,"mtime":1660838924116,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"65d6a2",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\index.tsx",[],["24","25"],"C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\App.tsx",[],"C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\hooks\\useLocalStorage.ts",[],"C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\context\\resourceLabels\\ResourceLabelsContext.tsx",["26","27"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\nimport RequestLabelsJSON from \"../../resources/ResourceLabels.json\"\r\n\r\ninterface ResourceLabel {\r\n    idResource: string;\r\n    value: string;\r\n}\r\n\r\ninterface ResourceLabelsContextProps {\r\n    resourceLabels: ResourceLabel[];\r\n}\r\n\r\nexport const ResourceLabelsContext = createContext<ResourceLabelsContextProps>({\r\n    resourceLabels: []\r\n\r\n})\r\n\r\n\r\ninterface ResourceLabelsProviderProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport const ResourceLabelsProvider = (props: ResourceLabelsProviderProps) => {\r\n\r\n    const { setValue, storedValue } = useLocalStorage(\"resourceLabels\", null)\r\n\r\n    const [resourceLabels, setresourceLabels] = useState([...RequestLabelsJSON.resourceModel])\r\n\r\n    useEffect(() => {\r\n        if (!storedValue) {\r\n\r\n            setValue(resourceLabels)\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <ResourceLabelsContext.Provider value={{ resourceLabels: storedValue }}>\r\n            {props.children}\r\n        </ResourceLabelsContext.Provider>\r\n    )\r\n}","C:\\Users\\Linear Softwares\\Desktop\\Alisson\\zap\\project-test-components\\src\\context\\resourceMessages\\ResourceMessagesContext.tsx",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":28,"column":28,"nodeType":"36","messageId":"37","endLine":28,"endColumn":45},{"ruleId":"38","severity":1,"message":"39","line":36,"column":8,"nodeType":"40","endLine":36,"endColumn":10,"suggestions":"41"},{"ruleId":"34","severity":1,"message":"35","line":28,"column":28,"nodeType":"36","messageId":"37","endLine":28,"endColumn":45},{"ruleId":"38","severity":1,"message":"39","line":36,"column":8,"nodeType":"40","endLine":36,"endColumn":10,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'setresourceLabels' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'resourceLabels', 'setValue', and 'storedValue'. Either include them or remove the dependency array.","ArrayExpression",["45"],["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},{"desc":"47","fix":"49"},"Update the dependencies array to be: [resourceLabels, setValue, storedValue]",{"range":"50","text":"51"},{"range":"52","text":"51"},[924,926],"[resourceLabels, setValue, storedValue]",[952,954]]